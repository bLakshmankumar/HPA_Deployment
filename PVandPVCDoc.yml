what is PV -:
-----------------
> The k8s will maintain the volume information like type of volume we using, and who claim that volume.
> The k8s cluster will maintain the volume informatiion.
> PV is a piece of storage in a cluster.
> PV will provide the storage resources to the k8s objects.

These PVs provisioned in two ways  -:
--------------------------------------------------
    1)  Static Volumes   -: which is a created  manually. as a k8's admin we can create pv manually. which can be used/claimed by pods whatever required some storage.
    2) Dynamic Volumes   -: Here we no need to create pv object manually. The implementation of dynamic volume provisioning is based on the API object StorageClass.
    For Dynamic Volumes First we need to create storage class and we need to provide that name to pvc manifest.

What is Storageclass(Volume Provisioner) -:
------------------------------------------
> A StorageClass provides a way for administrators to describe the "classes" of storage they offer.
> Different classes might map to quality-of-service levels, or to backup policies, or to arbitrary policies determined by the cluster administrators.
> It's a piece of code(driver) which will create volumes(pv) whenever we have a pvc request and we don't have pv in available in the cluster.
> Each StorageClass contains the fields provisioner, parameters, and reclaimPolicy, which are used when a PersistentVolume belonging to the class needs to be dynamically provisioned.
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

1) Static Volumes-:
------------------
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pvforhostpath
spec:
  storageClassName: manual
  capacity: 1Gi
  accessModes:
  - ReadWriteOnce
  hostpath:
    path: "/kube/volume
  ...
# > we have different types of access modes in pv 1) ReadWriteOnce 2) ReadWriteMany 3) ReadOnlyMany.#
# > ReadWriteOnce -> Only one node/pod can read and write the data.
# > ReadWriteMany -> Multiple Nodes/pods can read and write data.
# > ReadOnlyMany  -> Many Nodes/pods can ReadOnly volumes.
# > we create a volume but how can we request a volume for that we need to create a pvc.
# > create a pvc -:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodbpvc
spec:
  storageClassName: manual 
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

# how the pvc will associated with pv -:
----------------------------------------
# The claim will associated with volume based on which perameters so what perameters will associate. 
# So the pvc will associate with accessmodes and storage capacity requests.
# So now i created the volumeclaim name with *(mongodbpvc)*.
# This name (mongodbpvc) i'll associated with my mongodb db manifest(k8s_Volumes.yml) inside volume section.
#
Recommended way -:
----------------------------
> Even if using Hostpath or NFS or any type of volume also first we have to create a PV  with that storage type (weather it's a Hostpath or nfs) then our pod will claim that volume with help of PVC.
